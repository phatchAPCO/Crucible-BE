version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: crucible-postgres
    environment:
      POSTGRES_USER: crucible
      POSTGRES_PASSWORD: crucible-dev-password
      POSTGRES_DB: crucible
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crucible"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: crucible-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crucible-app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=crucible
      - POSTGRES_PASSWORD=crucible-dev-password
      - POSTGRES_DB=crucible
      - REDIS_HOST=redis
      - SECRET_KEY=dev-secret-key-change-in-production
    volumes:
      - ./app:/app/app
      - ./tests:/app/tests
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data: